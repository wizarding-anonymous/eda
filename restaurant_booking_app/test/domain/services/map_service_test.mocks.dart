// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant_booking_app/test/domain/services/map_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_booking_app/domain/entities/venue.dart' as _i3;
import 'package:restaurant_booking_app/domain/services/map_service.dart' as _i4;
import 'package:yandex_mapkit/yandex_mapkit.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePoint_0 extends _i1.SmartFake implements _i2.Point {
  _FakePoint_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLng_1 extends _i1.SmartFake implements _i3.LatLng {
  _FakeLatLng_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCameraPosition_2 extends _i1.SmartFake
    implements _i2.CameraPosition {
  _FakeCameraPosition_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MapService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapService extends _i1.Mock implements _i4.MapService {
  MockMapService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i2.Point convertToYandexPoint(_i3.LatLng? latLng) => (super.noSuchMethod(
        Invocation.method(
          #convertToYandexPoint,
          [latLng],
        ),
        returnValue: _FakePoint_0(
          this,
          Invocation.method(
            #convertToYandexPoint,
            [latLng],
          ),
        ),
      ) as _i2.Point);

  @override
  _i3.LatLng convertFromYandexPoint(_i2.Point? point) => (super.noSuchMethod(
        Invocation.method(
          #convertFromYandexPoint,
          [point],
        ),
        returnValue: _FakeLatLng_1(
          this,
          Invocation.method(
            #convertFromYandexPoint,
            [point],
          ),
        ),
      ) as _i3.LatLng);

  @override
  List<_i2.MapObject<dynamic>> createVenueMarkers(
    List<_i3.Venue>? venues, {
    dynamic Function(_i3.Venue)? onVenueTap,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createVenueMarkers,
          [venues],
          {#onVenueTap: onVenueTap},
        ),
        returnValue: <_i2.MapObject<dynamic>>[],
      ) as List<_i2.MapObject<dynamic>>);

  @override
  _i2.CameraPosition createCameraPosition(
    _i3.LatLng? center, {
    double? zoom = 14.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCameraPosition,
          [center],
          {#zoom: zoom},
        ),
        returnValue: _FakeCameraPosition_2(
          this,
          Invocation.method(
            #createCameraPosition,
            [center],
            {#zoom: zoom},
          ),
        ),
      ) as _i2.CameraPosition);
}
