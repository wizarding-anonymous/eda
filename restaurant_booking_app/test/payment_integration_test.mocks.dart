// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant_booking_app/test/payment_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:restaurant_booking_app/core/network/api_result.dart' as _i4;
import 'package:restaurant_booking_app/domain/entities/payment.dart' as _i5;
import 'package:restaurant_booking_app/domain/entities/reservation.dart' as _i8;
import 'package:restaurant_booking_app/domain/entities/table.dart' as _i10;
import 'package:restaurant_booking_app/domain/entities/time_slot.dart' as _i9;
import 'package:restaurant_booking_app/domain/repositories/booking_repository.dart'
    as _i7;
import 'package:restaurant_booking_app/domain/repositories/payment_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PaymentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentRepository extends _i1.Mock implements _i2.PaymentRepository {
  MockPaymentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ApiResult<_i5.PaymentResult>> processPayment(
          _i5.PaymentRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #processPayment,
          [request],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.PaymentResult>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.PaymentResult>>(
          this,
          Invocation.method(
            #processPayment,
            [request],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.PaymentResult>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.QRPaymentSession>> resolveQRToken(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #resolveQRToken,
          [token],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.QRPaymentSession>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.QRPaymentSession>>(
          this,
          Invocation.method(
            #resolveQRToken,
            [token],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.QRPaymentSession>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Receipt>> getReceipt(String? paymentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReceipt,
          [paymentId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Receipt>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Receipt>>(
          this,
          Invocation.method(
            #getReceipt,
            [paymentId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Receipt>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.PaymentResult>> processQRPayment(
          _i5.QRPaymentRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #processQRPayment,
          [request],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.PaymentResult>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.PaymentResult>>(
          this,
          Invocation.method(
            #processQRPayment,
            [request],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.PaymentResult>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i5.PaymentHistory>>> getPaymentHistory({
    int? page = 1,
    int? limit = 20,
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentHistory,
          [],
          {
            #page: page,
            #limit: limit,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i5.PaymentHistory>>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i5.PaymentHistory>>>(
          this,
          Invocation.method(
            #getPaymentHistory,
            [],
            {
              #page: page,
              #limit: limit,
              #startDate: startDate,
              #endDate: endDate,
            },
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i5.PaymentHistory>>>);
}

/// A class which mocks [BookingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingRepository extends _i1.Mock implements _i7.BookingRepository {
  MockBookingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ApiResult<_i8.Reservation>> createReservation(
          _i8.ReservationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReservation,
          [request],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i8.Reservation>>.value(
            _i6.dummyValue<_i4.ApiResult<_i8.Reservation>>(
          this,
          Invocation.method(
            #createReservation,
            [request],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i8.Reservation>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i8.Reservation>>> getUserReservations({
    _i8.ReservationStatus? status,
    int? page = 1,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserReservations,
          [],
          {
            #status: status,
            #page: page,
            #limit: limit,
          },
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i8.Reservation>>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i8.Reservation>>>(
          this,
          Invocation.method(
            #getUserReservations,
            [],
            {
              #status: status,
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i8.Reservation>>>);

  @override
  _i3.Future<_i4.ApiResult<_i8.Reservation>> getReservationDetails(
          String? reservationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReservationDetails,
          [reservationId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i8.Reservation>>.value(
            _i6.dummyValue<_i4.ApiResult<_i8.Reservation>>(
          this,
          Invocation.method(
            #getReservationDetails,
            [reservationId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i8.Reservation>>);

  @override
  _i3.Future<_i4.ApiResult<void>> cancelReservation(
    String? reservationId,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelReservation,
          [
            reservationId,
            reason,
          ],
        ),
        returnValue: _i3.Future<_i4.ApiResult<void>>.value(
            _i6.dummyValue<_i4.ApiResult<void>>(
          this,
          Invocation.method(
            #cancelReservation,
            [
              reservationId,
              reason,
            ],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<void>>);

  @override
  _i3.Future<_i4.ApiResult<_i8.Reservation>> updateReservation(
    String? reservationId,
    _i8.ReservationRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReservation,
          [
            reservationId,
            request,
          ],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i8.Reservation>>.value(
            _i6.dummyValue<_i4.ApiResult<_i8.Reservation>>(
          this,
          Invocation.method(
            #updateReservation,
            [
              reservationId,
              request,
            ],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i8.Reservation>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Order>> createPreorder(
          _i7.PreorderRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPreorder,
          [request],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Order>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Order>>(
          this,
          Invocation.method(
            #createPreorder,
            [request],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Order>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Order>> getPreorderDetails(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPreorderDetails,
          [orderId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Order>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Order>>(
          this,
          Invocation.method(
            #getPreorderDetails,
            [orderId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Order>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Order>> updatePreorder(
    String? orderId,
    _i7.PreorderRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePreorder,
          [
            orderId,
            request,
          ],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Order>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Order>>(
          this,
          Invocation.method(
            #updatePreorder,
            [
              orderId,
              request,
            ],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Order>>);

  @override
  _i3.Future<_i4.ApiResult<_i8.Reservation>> confirmReservation(
          String? reservationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmReservation,
          [reservationId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i8.Reservation>>.value(
            _i6.dummyValue<_i4.ApiResult<_i8.Reservation>>(
          this,
          Invocation.method(
            #confirmReservation,
            [reservationId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i8.Reservation>>);

  @override
  _i3.Future<_i4.ApiResult<void>> checkIn(String? reservationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIn,
          [reservationId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<void>>.value(
            _i6.dummyValue<_i4.ApiResult<void>>(
          this,
          Invocation.method(
            #checkIn,
            [reservationId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<void>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i9.TimeSlot>>> getAvailableTimeSlots(
          _i9.TimeSlotQuery? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableTimeSlots,
          [query],
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i9.TimeSlot>>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i9.TimeSlot>>>(
          this,
          Invocation.method(
            #getAvailableTimeSlots,
            [query],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i9.TimeSlot>>>);

  @override
  _i3.Future<_i4.ApiResult<_i9.TimeSlot>> getTimeSlotDetails(
          String? timeSlotId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimeSlotDetails,
          [timeSlotId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i9.TimeSlot>>.value(
            _i6.dummyValue<_i4.ApiResult<_i9.TimeSlot>>(
          this,
          Invocation.method(
            #getTimeSlotDetails,
            [timeSlotId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i9.TimeSlot>>);

  @override
  _i3.Future<_i4.ApiResult<bool>> checkTimeSlotAvailability(
    String? timeSlotId,
    int? partySize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkTimeSlotAvailability,
          [
            timeSlotId,
            partySize,
          ],
        ),
        returnValue: _i3.Future<_i4.ApiResult<bool>>.value(
            _i6.dummyValue<_i4.ApiResult<bool>>(
          this,
          Invocation.method(
            #checkTimeSlotAvailability,
            [
              timeSlotId,
              partySize,
            ],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<bool>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i10.TableAvailability>>> getAvailableTables(
          _i10.TableQuery? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableTables,
          [query],
        ),
        returnValue:
            _i3.Future<_i4.ApiResult<List<_i10.TableAvailability>>>.value(
                _i6.dummyValue<_i4.ApiResult<List<_i10.TableAvailability>>>(
          this,
          Invocation.method(
            #getAvailableTables,
            [query],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i10.TableAvailability>>>);

  @override
  _i3.Future<_i4.ApiResult<_i10.Table>> getTableDetails(String? tableId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTableDetails,
          [tableId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i10.Table>>.value(
            _i6.dummyValue<_i4.ApiResult<_i10.Table>>(
          this,
          Invocation.method(
            #getTableDetails,
            [tableId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i10.Table>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i10.TableAvailability>>> getTableAvailability(
    String? tableId,
    DateTime? startTime,
    DateTime? endTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTableAvailability,
          [
            tableId,
            startTime,
            endTime,
          ],
        ),
        returnValue:
            _i3.Future<_i4.ApiResult<List<_i10.TableAvailability>>>.value(
                _i6.dummyValue<_i4.ApiResult<List<_i10.TableAvailability>>>(
          this,
          Invocation.method(
            #getTableAvailability,
            [
              tableId,
              startTime,
              endTime,
            ],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i10.TableAvailability>>>);
}
